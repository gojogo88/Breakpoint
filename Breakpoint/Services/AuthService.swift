//
//  AuthService.swift
//  Breakpoint
//
//  Created by Jonathan Go on 2017/09/12.
//  Copyright Â© 2017 Appdelight. All rights reserved.
//

//swift file.  singleton class
import Foundation
import Firebase

class AuthService {
    static let instance = AuthService()  //so long as the app is running, we have access to the instance of this class.
    
    func registerUser(withEmail email: String, andPassword password: String, userCreationComplete: @escaping CompletionHandler) {
        Auth.auth().createUser(withEmail: email, password: password) { (user, error) in
            //if a user is returned, we need a constant to hold all the info for the user.  If not, we will handle any errors that we get
            guard let user = user else {
                userCreationComplete(false, error)
                return
            }
            //if guard was successful, we create this dictionary then create the DBUser
            let userData = ["provider": user.providerID, "email": user.email]   //provider from Firebase. ProviderID can be FB, G+, etc.
            DataService.instance.createDBUser(forUID: user.uid, forUserData: userData)  //user.uid is already generated by Firebase automatically so we don't need to create a unique ID.
            userCreationComplete(true, nil)
        }
    }
    
    func loginUser(withEmail email: String, andPassword password: String, loginComplete: @escaping CompletionHandler) {
        Auth.auth().signIn(withEmail: email, password: password) { (user, error) in
            if error != nil {
                loginComplete(false, error)
                return
            }
            loginComplete(true, nil)
        }
    }
}
